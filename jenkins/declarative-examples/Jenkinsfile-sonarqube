pipeline {
    agent any
	tools {
        maven 'M3' 
    }
    stages {
		stage('SonarQube analysis') {
		steps {
			withSonarQubeEnv('My SonarQube Server') {
			sh 'mvn -B -DskipTests clean package sonar:sonar'
		} // SonarQube taskId is automatically attached to the pipeline context
  }
  }
  stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    // Requires SonarQube Scanner for Jenkins 2.7+
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
    }
}
